<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Magicer|张同爽的个人博客]]></title>
  <subtitle><![CDATA[Magicer]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://magicer.xyz/"/>
  <updated>2015-10-11T11:04:27.865Z</updated>
  <id>http://magicer.xyz/</id>
  
  <author>
    <name><![CDATA[Magicer]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hexo博客转移 从github到gitcafe]]></title>
    <link href="http://magicer.xyz/2015/10/11/Hexo-github-gitcafe/"/>
    <id>http://magicer.xyz/2015/10/11/Hexo-github-gitcafe/</id>
    <published>2015-10-11T05:27:08.000Z</published>
    <updated>2015-10-11T11:04:27.865Z</updated>
    <content type="html"><![CDATA[<p>  用Hexo和github搭建博客很长时间了，考虑到自己的博客可能主要的用户都会是国内的，所以想吧博客从github上转移到gitcafe上来，一开始打算转移到coding.net上，不过Coding不能自定义域名所以就没有用Coding，不过访问 <a href="http://magicer.coding.io" target="_blank" rel="external">magicer.coding.io</a> 也能访问我的博客，因为代码也同步到Coding上来了。<br>   下面就记录一下自己博客转移的过程。</p>
<h2 id="gitcafe的使用">gitcafe的使用</h2><p>   首先注册gitcafe账户创建项目，此处我创建的项目名跟我的用户名一样。<br>   随后，在自己的家目录的<code>.ssh/</code>目录下找到<code>id_rsa.pub</code>文件，打开后复制内容粘贴到gitcafe的 <code>SSH公钥管理</code>中新建SSH公钥（如果配置过github会存在<code>.ssh/</code>文件夹，如果没有的话，需要配置，配置方法见：<a href="http://0.0.0.0:4001/2015/04/30/github-config/" target="_blank" rel="external">配置github</a>，测试的时候只需要将github换成gitcafe即可。）<br>   <img src="/image_code/gitcafe-ssh-setting.png" alt="SSH设置"></p>
<h2 id="托管代码到gitcafe">托管代码到gitcafe</h2><p>  在这里说明，我安装了git插件，安装方法：</p>
  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>在<code>_config.yml.</code>中配置（可以同时托管代码在github和gitcafe上，）</p>
<figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br><span class="line">  <span class="literal">message</span>: [<span class="literal">message</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者:</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  <span class="literal">message</span>: [<span class="literal">message</span>]</span><br><span class="line">  repo: </span><br><span class="line">    github: &lt;repository url&gt;,[branch]</span><br><span class="line">    gitcafe: &lt;repository url&gt;,[branch]</span><br></pre></td></tr></table></figure>
<h2 id="pages服务">pages服务</h2><p>  托管上代码之后应该分支应该会直接是<code>gitcafe-pages</code>分支，之后<code>项目设置</code>自定义域名<br>  <img src="/image_code/Gitcafe-pages-setting.png" alt="gitcafe-pages"></p>
<p>  修改域名的解析搬移即可完成。<br>  新建CNAME解析，解析到<code>gitcafe.io</code>,现在gitcafe已经不支持A记录解析方式。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>  用Hexo和github搭建博客很长时间了，考虑到自己的博客可能主要的用户都会是国内的，所以想吧博客从github上转移到gitcafe上来，一开始打算转移到coding.net上，不过Coding不能自定义域名所以就没有用Coding，不过访问 <a href="ht]]>
    </summary>
    
      <category term="gitcafe" scheme="http://magicer.xyz/tags/gitcafe/"/>
    
      <category term="github" scheme="http://magicer.xyz/tags/github/"/>
    
      <category term="hexo" scheme="http://magicer.xyz/tags/hexo/"/>
    
      <category term="博客搭建" scheme="http://magicer.xyz/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[java初学常用代码知识]]></title>
    <link href="http://magicer.xyz/2015/08/01/java-code-fragment/"/>
    <id>http://magicer.xyz/2015/08/01/java-code-fragment/</id>
    <published>2015-08-01T12:34:31.000Z</published>
    <updated>2015-10-10T16:27:01.574Z</updated>
    <content type="html"><![CDATA[<h2 id="File类">File类</h2><p>File类的构造方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">File</span><span class="params">(String pathname)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">File</span><span class="params">(File parent,String child)</span></span>;</span><br></pre></td></tr></table></figure>
<p>使用File操作文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">creatNewFile</span><span class="params">()</span> <span class="keyword">throws</span> IOExcetion <span class="comment">//创建文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">()</span>                         <span class="comment">//删除文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">exists</span><span class="params">()</span>                         <span class="comment">//判断给定的路径是否存在</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String separator            <span class="comment">//  “/” 注意：常量，但是未大写</span></span><br><span class="line"><span class="keyword">public</span> File <span class="title">getParentFile</span><span class="params">()</span>                     <span class="comment">//找到一个指定路径的父路径</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">mkdirs</span><span class="params">()</span>                         <span class="comment">//创建制定目录</span></span><br><span class="line"><span class="comment">/*其他方法*/</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span>         <span class="comment">//取得文件的名字</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isDirectory</span><span class="params">()</span>    <span class="comment">//判断给定的路径是否是文件夹</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFile</span><span class="params">()</span>         <span class="comment">//判断给定的路径是否是文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isHidden</span><span class="params">()</span>       <span class="comment">//判断是否隐藏</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lastModified</span><span class="params">()</span>      <span class="comment">//文件最后一次修改日期</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">length</span><span class="params">()</span>            <span class="comment">//取得文件大小，以字节为单位返回</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">renameTo</span><span class="params">(File dest)</span>  <span class="comment">//为文件重命名</span></span><br><span class="line"><span class="keyword">public</span> File[] <span class="title">listFiles</span><span class="params">()</span>   <span class="comment">//将目录中所有的文件以File对象数组的方式返回</span></span></span><br></pre></td></tr></table></figure></p>
<p>简单示例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  判断制定文件是否存在，若存在则删除，不存在则创建*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(File.separator + <span class="string">"home"</span> + File.separator</span><br><span class="line">                + <span class="string">"magicer"</span> + File.separator + <span class="string">"code"</span> + File.separator</span><br><span class="line">                + <span class="string">"Demo.txt"</span>);</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            file.delete();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                file.createNewFile();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="File类">File类</h2><p>File类的构造方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br>]]>
    </summary>
    
      <category term="java" scheme="http://magicer.xyz/tags/java/"/>
    
      <category term="Java" scheme="http://magicer.xyz/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[泛型的简单使用]]></title>
    <link href="http://magicer.xyz/2015/08/01/generic-simple/"/>
    <id>http://magicer.xyz/2015/08/01/generic-simple/</id>
    <published>2015-08-01T11:55:15.000Z</published>
    <updated>2015-10-10T16:27:54.026Z</updated>
    <content type="html"><![CDATA[<p>java泛型的简单使用。<br>泛型的定义：泛型是JDK 1.5的一项新特性，它的本质是参数化类型（Parameterized Type）的应用，也就是说所操作的数据类型被指定为一个参数，在用到的时候在指定具体的类型。这种参数类型可以用在类、接口和方法的创建中，分别称为泛型类、泛型接口和泛型方法<a id="more"></a></p>
<h2 id="java泛型的基本使用">java泛型的基本使用</h2><p>加上了通配符”？“。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//泛型</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Message</span> &lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> T info;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInfo</span><span class="params">(T info)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.info=info;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Message&lt;String&gt; msg=<span class="keyword">new</span> Message&lt;String&gt;();</span><br><span class="line">        msg.setInfo(<span class="string">"Hello World!!!!"</span>);</span><br><span class="line">        print(msg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(Message&lt;?&gt; temp)</span></span>&#123;</span><br><span class="line">        <span class="comment">/*当泛型作为参数的时候，因为不知道要传递的是什么类型的之，所以方法在编写的时候具有局限性</span><br><span class="line">        可以加上通配符”？“，来让参数通用，不管是什么类型的参数都可以作为参数传递了*/</span></span><br><span class="line">        System.out.println(temp.getInfo());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>本程序注释仅为个人观点，如有不符，还望指正。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>java泛型的简单使用。<br>泛型的定义：泛型是JDK 1.5的一项新特性，它的本质是参数化类型（Parameterized Type）的应用，也就是说所操作的数据类型被指定为一个参数，在用到的时候在指定具体的类型。这种参数类型可以用在类、接口和方法的创建中，分别称为泛型类、泛型接口和泛型方法]]>
    
    </summary>
    
      <category term="java泛型" scheme="http://magicer.xyz/tags/java%E6%B3%9B%E5%9E%8B/"/>
    
      <category term="Java" scheme="http://magicer.xyz/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[整整两个月了]]></title>
    <link href="http://magicer.xyz/2015/07/09/total-two-month/"/>
    <id>http://magicer.xyz/2015/07/09/total-two-month/</id>
    <published>2015-07-09T14:06:59.000Z</published>
    <updated>2015-10-10T16:14:46.982Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p><a href="http://blog.csdn.net/Captain_Magicer" target="_blank" rel="external">CSDN博客连接</a></p>
<p><hr><br> 已经整整两个月没有写博客了，尽管子集的博客质量并不高，但是坚持下去还是会好起来的，毕竟限于自己的水平较低，水平低是正常的。现在的CSDN也可以用markdown写博客了，想着跟子集搭建的博客一块更新，也不是难事。毕竟自己的个人博客上的方可基本上没有，转移到CSDN上或与会好点。</p>
<p><hr><br> 在这两个月里，经同学介绍进了西门子电子开关插座公司做实习生，一开始同学说是跟编程有关，奔着试一试的态度就去了，不过到了面试过后发现，跟他描述的全然不同，不过，一个星期在那儿干一两天也基本上够我这一周的零花，这点还是不错的，假期就不回去了，在学校进修。（嘻嘻，说的真好听。） 在SWAS主要是负责公司的员工申请的各种服务，或为其申请服务。不过公司不能连网，这点让我很是头疼，作为一个想成为程序猿的我来说，这点真的很难忍受。安装各种软件都有限制。毕竟跟编程不沾边，也就看来了。整点外快嘛。不过在这里的这段时间，让我学到了不少东西，在学校里是学不到的。就这样。这两个月了。博客都荒废了。想着现在该重新拾起了。</p>
<p><hr><br>自从电脑上的游戏安装上了之后，就没有消停过，看来真的应该卸载了。不然电脑都碰不到了。哎。</p>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p><a href="http://blog.csdn.net/Captain_Magicer" target="_blank" rel="external">CSDN博客连接</a></p>
<p><hr><br> 已经整整两个月没有写博客]]>
    </summary>
    
      <category term="生活轶事" scheme="http://magicer.xyz/categories/%E7%94%9F%E6%B4%BB%E8%BD%B6%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[（转）Android开发效率—Eclipse快捷键]]></title>
    <link href="http://magicer.xyz/2015/05/09/android-eclipse-hot-key/"/>
    <id>http://magicer.xyz/2015/05/09/android-eclipse-hot-key/</id>
    <published>2015-05-09T12:26:50.000Z</published>
    <updated>2015-10-10T16:12:38.894Z</updated>
    <content type="html"><![CDATA[<p> 很多过去使用Visual Studio开发软件的网友可能不熟悉Java开发环境，今天Android开发网告诉大家一些提高Android开发效率的Eclipse快捷键，可以有效率的帮助我们管理代码和减少键盘输入。Eclipse相对于Visual Studio而言使用Java开发，响应速度和稳定性上有很大的欠缺，这些我们目前只能容忍下。<a id="more"></a></p>
 <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">转载自<span class="string">http:</span><span class="comment">//www.cnblogs.com/lm3515/archive/2011/03/16/1985671.html</span></span><br></pre></td></tr></table></figure>
<p>　　比较常用的Android123整理如下:</p>
<p>　　自动补充import Package Ctrl+Shift+O，这里O代表Organize Import的意思。</p>
<p>　　格式化代码缩进 Ctrl+Shift+F，这里面我们可以记忆F为Format格式化的意思。</p>
<p>　　快速查找代码 Ctrl+F，撤消到上一次Ctrl+Z</p>
<p>　　智能内容感知 Alt+/ ，该快捷键可以方便的匹配我们使用的类信息，/ 在键盘上和?是同一个按键。</p>
<p>　　调用运行Run As对话框可以使用Ctrl+F11，如果为Debug调试方式可以直接使用F11。</p>
<p>　　生成一个板块注释Alt+Shift+J ，单行注释为Ctrl+/键</p>
<p>用Eclipse开发，不知道快捷键可不行啊。<br>熟悉快捷键可以大大的提高效率：</p>
<h2 id="常用">常用</h2><p>Ctrl+M 当前窗口最大化<br>Ctrl+F7 视窗口切换<br>Ctrl+F8 模式切换<br>Ctrl+F6 编辑窗口切换(手指张得太大不雅观啊)<br>Ctrl+E 编辑窗口切换(这个比较文雅点??)<br>Alt+← 前一个编辑的页面<br>Alt+→ 下一个编辑的页面<br>Ctrl+Alt+↓ 复制(增加)当前行到下一行<br>Ctrl+Alt+↑ 复制(增加)当前行到上一行<br>Alt+↓ 当前行和下面一行交互位置(用不着剪切了)<br>Alt+↑ 当前行和上面一行交互位置<br>Ctrl+D 删除当前行<br>Alt+Enter 显示当前选择文件的属性<br>Shift+Enter 在当前行插入空行(下一行)<br>Shift+Ctrl+Enter 在当前行插入空行(上一行)<br>Ctrl+Q 定位到最后编辑的地方<br>Ctrl+L 定位在具体某行<br>Ctrl+/ 注释当前行(可多行),再按则取消注释<br>Ctrl+Shift+R 找文件<br>Ctrl+Shift+T 找类<br>Ctrl+K 选中的Word快速定位到下一个<br>Ctrl+Shift+K 选中的Word快速定位到上一个<br>Ctrl+Shift+U 选中后列出查询到的结果<br>Ctrl+/(小键盘) 折叠当前类中的所有代码<br>Ctrl+×(小键盘) 展开当前类中的所有代码<br>Ctrl+Shift+P 定位到对于的匹配符(如{},())<br>CTRL+SHIFT+X 切换字符的大小写(大写)<br>CTRL+SHIFT+Y 切换字符的大小写(小写)<br>Ctrl+1 当某行出错时或警告时,跳出帮助<br>Ctrl+Shift+F 格式排版<br>Alt+Shift+R 重命名 (改量和类名时很方便)<br>Alt+Shift+C 修改函数结<br>Alt+Shift+M 重构方法 (选中要重构方法,再生成个新方法)<br>Alt+Shift+Z 重构恢复<br>Ctrl+W 关闭当前窗口<br>Ctrl+Shift+F4 关闭所有打开的窗口<br>Ctrl+Shift+O ： import相关类，同时若已经import的类，没有被用到，就删除。<br>sysout-&gt;Ctrl+Space-&gt;System.out.println()<br>Window-&gt;reference-&gt;Workbench-&gt;Keys 有兴趣的可以自定义热键</p>
<h2 id="编辑">编辑</h2><p>作用域 功能 快捷键<br>全局 查找并替换 Ctrl+F<br>文本编辑器 查找上一个 Ctrl+Shift+K<br>文本编辑器 查找下一个 Ctrl+K<br>全局 撤销 Ctrl+Z<br>全局 复制 Ctrl+C<br>全局 恢复上一个选择 Alt+Shift+↓<br>全局 剪切 Ctrl+X<br>全局 快速修正 Ctrl1+1<br>全局 内容辅助 Alt+/<br>全局 全部选中 Ctrl+A<br>全局 删除 Delete<br>全局 上下文信息 Alt+？<br>Alt+Shift+?<br>Ctrl+Shift+Space<br>Java编辑器 显示工具提示描述 F2<br>Java编辑器 选择封装元素 Alt+Shift+↑<br>Java编辑器 选择上一个元素 Alt+Shift+←<br>Java编辑器 选择下一个元素 Alt+Shift+→<br>文本编辑器 增量查找 Ctrl+J<br>文本编辑器 增量逆向查找 Ctrl+Shift+J<br>全局 粘贴 Ctrl+V<br>全局 重做 Ctrl+Y</p>
<h2 id="查看">查看</h2><p>作用域 功能 快捷键<br>全局 放大 Ctrl+=<br>全局 缩小 Ctrl+-</p>
<h2 id="窗口">窗口</h2><p>作用域 功能 快捷键<br>全局 激活编辑器 F12<br>全局 切换编辑器 Ctrl+Shift+W<br>全局 上一个编辑器 Ctrl+Shift+F6<br>全局 上一个视图 Ctrl+Shift+F7<br>全局 上一个透视图 Ctrl+Shift+F8<br>全局 下一个编辑器 Ctrl+F6<br>全局 下一个视图 Ctrl+F7<br>全局 下一个透视图 Ctrl+F8<br>文本编辑器 显示标尺上下文菜单 Ctrl+W<br>全局 显示视图菜单 Ctrl+F10<br>全局 显示系统菜单 Alt+-</p>
<h2 id="导航">导航</h2><p>作用域 功能 快捷键<br>Java编辑器 打开结构 Ctrl+F3<br>全局 打开类型 Ctrl+Shift+T<br>全局 打开类型层次结构 F4<br>全局 打开声明 F3<br>全局 打开外部javadoc Shift+F2<br>全局 打开资源 Ctrl+Shift+R<br>全局 后退历史记录 Alt+←<br>全局 前进历史记录 Alt+→<br>全局 上一个 Ctrl+,<br>全局 下一个 Ctrl+.<br>Java编辑器 显示大纲 Ctrl+O<br>全局 在层次结构中打开类型 Ctrl+Shift+H<br>全局 转至匹配的括号 Ctrl+Shift+P<br>全局 转至上一个编辑位置 Ctrl+Q<br>Java编辑器 转至上一个成员 Ctrl+Shift+↑<br>Java编辑器 转至下一个成员 Ctrl+Shift+↓<br>文本编辑器 转至行 Ctrl+L</p>
<h2 id="搜索">搜索</h2><p>作用域 功能 快捷键<br>全局 出现在文件中 Ctrl+Shift+U<br>全局 打开搜索对话框 Ctrl+H<br>全局 工作区中的声明 Ctrl+G<br>全局 工作区中的引用 Ctrl+Shift+G</p>
<h2 id="文本编辑">文本编辑</h2><p>作用域 功能 快捷键<br>文本编辑器 改写切换 Insert<br>文本编辑器 上滚行 Ctrl+↑<br>文本编辑器 下滚行 Ctrl+↓</p>
<h2 id="文件">文件</h2><p>作用域 功能 快捷键<br>全局 保存 Ctrl+X<br>Ctrl+S<br>全局 打印 Ctrl+P<br>全局 关闭 Ctrl+F4<br>全局 全部保存 Ctrl+Shift+S<br>全局 全部关闭 Ctrl+Shift+F4<br>全局 属性 Alt+Enter<br>全局 新建 Ctrl+N</p>
<h2 id="项目">项目</h2><p>作用域 功能 快捷键<br>全局 全部构建 Ctrl+B</p>
<h2 id="源代码">源代码</h2><p>作用域 功能 快捷键<br>Java编辑器 格式化 Ctrl+Shift+F<br>Java编辑器 取消注释 Ctrl+\<br>Java编辑器 注释 Ctrl+/<br>Java编辑器 添加导入 Ctrl+Shift+M<br>Java编辑器 组织导入 Ctrl+Shift+O<br>Java编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。<br>也可以使用Ctrl+1自动修正。</p>
<h2 id="运行">运行</h2><p>作用域 功能 快捷键<br>全局 单步返回 F7<br>全局 单步跳过 F6<br>全局 单步跳入 F5<br>全局 单步跳入选择 Ctrl+F5<br>全局 调试上次启动 F11<br>全局 继续 F8<br>全局 使用过滤器单步执行 Shift+F5<br>全局 添加/去除断点 Ctrl+Shift+B<br>全局 显示 Ctrl+D<br>全局 运行上次启动 Ctrl+F11<br>全局 运行至行 Ctrl+R<br>全局 执行 Ctrl+U</p>
<h2 id="重构">重构</h2><p>作用域 功能 快捷键<br>全局 撤销重构 Alt+Shift+Z<br>全局 抽取方法 Alt+Shift+M<br>全局 抽取局部变量 Alt+Shift+L<br>全局 内联 Alt+Shift+I<br>全局 移动 Alt+Shift+V<br>全局 重命名 Alt+Shift+R<br>全局 重做 Alt+Shift+Y</p>
]]></content>
    <summary type="html">
    <![CDATA[<p> 很多过去使用Visual Studio开发软件的网友可能不熟悉Java开发环境，今天Android开发网告诉大家一些提高Android开发效率的Eclipse快捷键，可以有效率的帮助我们管理代码和减少键盘输入。Eclipse相对于Visual Studio而言使用Java开发，响应速度和稳定性上有很大的欠缺，这些我们目前只能容忍下。]]>
    
    </summary>
    
      <category term="android" scheme="http://magicer.xyz/tags/android/"/>
    
      <category term="eclipse" scheme="http://magicer.xyz/tags/eclipse/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[eclipse-android自动提示代码]]></title>
    <link href="http://magicer.xyz/2015/05/04/eclipse-android-auto/"/>
    <id>http://magicer.xyz/2015/05/04/eclipse-android-auto/</id>
    <published>2015-05-04T12:31:08.000Z</published>
    <updated>2015-10-10T15:59:39.470Z</updated>
    <content type="html"><![CDATA[<h2 id="（一）设置_java_文件的代码提示功能">（一）设置 java 文件的代码提示功能</h2><p>打 开 Eclipse 依次选择 Window &gt; Preferences &gt; Java &gt; Editor - Content Assist &gt; Auto activation triggers for Java ，设置框中默认是一个点，<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">.abcdefghijklmnopqrstuvwxyz(,</span></span><br></pre></td></tr></table></figure></p>
<h2 id="（二）设置_xml_文件的代码提示功能">（二）设置 xml 文件的代码提示功能</h2><p>打 开 Eclipse 依次选择 Window &gt; Preferences &gt; Xml &gt; Xml Files &gt; Editor &gt; Content Assist &gt; Auto activation &gt; Prompt when these characters are inserted ，设置框中默认是 &lt;=: ，</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;=:.abcdefghijklmnopqrstuvwxyz(,</span><br></pre></td></tr></table></figure>
<p>把delay该小一点。默认为500</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="（一）设置_java_文件的代码提示功能">（一）设置 java 文件的代码提示功能</h2><p>打 开 Eclipse 依次选择 Window &gt; Preferences &gt; Java &gt; Editor - Content Assist &g]]>
    </summary>
    
      <category term="android" scheme="http://magicer.xyz/tags/android/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git tag 、branch的使用]]></title>
    <link href="http://magicer.xyz/2015/05/04/git-tag-branch/"/>
    <id>http://magicer.xyz/2015/05/04/git-tag-branch/</id>
    <published>2015-05-04T04:21:55.000Z</published>
    <updated>2015-10-10T16:02:33.366Z</updated>
    <content type="html"><![CDATA[<p> Git是一个免费的、分布式的版本控制工具，或是一个强调速度快的源代码管理工具。Git诞生于2005年，最初是Linus Torvalds开发出来用于管理Linux内核的开发。<br><a id="more"></a></p>
<h2 id="（一）git_tag">（一）git tag</h2><h3 id="列出git中现有标签">列出git中现有标签</h3><p>   要想列出git中现有的所有标签，输入’git tag’命令运行即可：<br>  <figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">tag</span></span><br><span class="line">v0<span class="built_in">.1</span></span><br><span class="line">v1<span class="built_in">.3</span></span><br></pre></td></tr></table></figure></p>
   <figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin <span class="keyword">tag</span> <span class="variable">&lt;tagname&gt;</span>   	<span class="comment">##获取远程tag</span></span><br></pre></td></tr></table></figure>
<h3 id="创建标签">创建标签</h3><h4 id="轻量级标签">轻量级标签</h4><p> 轻量级标签跟分枝一样，不会改变。它就是针对某个特定提交的指针</p>
<h4 id="带注释的标签">带注释的标签</h4><p> 然而，带注释的标签是git仓库中的对象，它是一组校验和，包含标签名、email、日期，标签信息，GPG签名和验证<br> <figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">tag</span> -a v1.<span class="number">4</span> -m ‘version <span class="number">1.4</span>‘</span><br><span class="line">$ git <span class="keyword">tag</span></span><br><span class="line">v0.<span class="number">1</span></span><br><span class="line">v1.<span class="number">3</span></span><br><span class="line">v1.<span class="number">4</span></span><br><span class="line"><span class="variable">$git</span> show</span><br><span class="line"><span class="variable">$git</span> push origin --delete <span class="keyword">tag</span> <span class="variable">&lt;tagname&gt;</span> <span class="comment">##删除远程tag</span></span><br></pre></td></tr></table></figure></p>
<p>可以使用 git show 命令查看相应标签的版本信息，并连同显示打标签时的提交对象。</p>
<h3 id="发布标签">发布标签</h3><p> 通常的git push不会将标签对象提交到git服务器，我们需要进行显式的操作：<br> <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">push</span> origin v0.1.2 <span class="preprocessor"># 将v0.1.2标签提交到git服务器</span></span><br><span class="line">$ git <span class="keyword">push</span> origin –tags <span class="preprocessor"># 将本地所有标签一次性提交到git服务器</span></span><br></pre></td></tr></table></figure></p>
<h2 id="（二）git_branch">（二）git branch</h2> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git branch <span class="operator">-a</span> <span class="comment">##显示远程分支 红色为远程分支</span></span><br><span class="line">git branch <span class="operator">-d</span> gh-pages  <span class="comment">##删除本地分支</span></span><br><span class="line">git push origin :branch_name  <span class="comment">##删除远程分支</span></span><br></pre></td></tr></table></figure>
<h2 id="（三）在shell中显示分支名字">（三）在shell中显示分支名字</h2><p> 只需要把下面代码添加到 ～/.bashrc文件中即可。<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">## Parses out the branch name from .git/HEAD:</span></span><br><span class="line"><span class="function"><span class="title">find_git_branch</span></span> () &#123;</span><br><span class="line">    <span class="built_in">local</span> dir=. head</span><br><span class="line">    until [ <span class="string">"<span class="variable">$dir</span>"</span> -ef / ]; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="operator">-f</span> <span class="string">"<span class="variable">$dir</span>/.git/HEAD"</span> ]; <span class="keyword">then</span></span><br><span class="line">            head=$(&lt; <span class="string">"<span class="variable">$dir</span>/.git/HEAD"</span>)</span><br><span class="line">            <span class="keyword">if</span> [[ <span class="variable">$head</span> = ref:\ refs/heads/* ]]; <span class="keyword">then</span></span><br><span class="line">                git_branch=<span class="string">" | <span class="variable">$&#123;head#*/*/&#125;</span>"</span></span><br><span class="line">            <span class="keyword">elif</span> [[ <span class="variable">$head</span> != <span class="string">''</span> ]]; <span class="keyword">then</span></span><br><span class="line">                git_branch=<span class="string">" | (detached)"</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                git_branch=<span class="string">" | (unknow)"</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            <span class="built_in">return</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        dir=<span class="string">"../<span class="variable">$dir</span>"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    git_branch=<span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line">green=$<span class="string">'\[\e[1;32m\]'</span></span><br><span class="line">normal=$<span class="string">'\[\e[m\]'</span></span><br><span class="line">PROMPT_COMMAND=<span class="string">"find_git_branch; <span class="variable">$PROMPT_COMMAND</span>"</span></span><br><span class="line">PS1=<span class="string">"\u@\h:\w<span class="variable">$green</span>\$git_branch <span class="variable">$normal</span>\$ "</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p> Git是一个免费的、分布式的版本控制工具，或是一个强调速度快的源代码管理工具。Git诞生于2005年，最初是Linus Torvalds开发出来用于管理Linux内核的开发。<br>]]>
    
    </summary>
    
      <category term="github" scheme="http://magicer.xyz/tags/github/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[配置github]]></title>
    <link href="http://magicer.xyz/2015/04/30/github-config/"/>
    <id>http://magicer.xyz/2015/04/30/github-config/</id>
    <published>2015-04-30T06:32:59.000Z</published>
    <updated>2015-10-11T10:45:21.645Z</updated>
    <content type="html"><![CDATA[<p>电脑系统重新安装了，很多软件都需要重新设置，鼓捣了很长时间，顺便记录一下各种配置及修改。感觉好累啊。<br><a id="more"></a></p>
<h2 id="生成ssh">生成ssh</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email<span class="variable">@example</span>.com"</span></span><br><span class="line"><span class="comment"># Creates a new ssh key, using the provided email as a label</span></span><br><span class="line"><span class="comment"># Generating public/private rsa key pair.</span></span><br></pre></td></tr></table></figure>
<p>第一步不用直接回车就可以，之后按照流程输入就行，<br>然后把id_rsa.pub文件中的内容复制到github设置里面的ssh中</p>
<h2 id="测试是否成功：">测试是否成功：</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">ssh</span> -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure>
<p>当出现以下提示时即设置成功<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You've successfully authenticated, <span class="keyword">but</span> GitHub <span class="keyword">does</span> <span class="keyword">not</span></span><br><span class="line"><span class="comment"># provide shell access.</span></span><br></pre></td></tr></table></figure></p>
<h2 id="配置git">配置git</h2><p>在终端输入<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user<span class="class">.name</span>  <span class="string">"username"</span></span><br><span class="line">git config --global user<span class="class">.email</span>  <span class="string">"email"</span></span><br></pre></td></tr></table></figure></p>
<p>测试是否设置正确：<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">git</span> <span class="comment">config</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">global</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">list</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>电脑系统重新安装了，很多软件都需要重新设置，鼓捣了很长时间，顺便记录一下各种配置及修改。感觉好累啊。<br>]]>
    
    </summary>
    
      <category term="github" scheme="http://magicer.xyz/tags/github/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[安装sublime_text2]]></title>
    <link href="http://magicer.xyz/2015/04/30/sublime-text2/"/>
    <id>http://magicer.xyz/2015/04/30/sublime-text2/</id>
    <published>2015-04-30T03:44:06.000Z</published>
    <updated>2015-10-10T16:12:13.278Z</updated>
    <content type="html"><![CDATA[<p>  Sublime Text 是一个代码编辑器（Sublime Text 2是收费软件，但可以无限期试用），也是HTML和散文先进的文本编辑器。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。</p>
<p>   SublimeText具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。<br><a id="more"></a></p>
<h2 id="安装">安装</h2> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">add-apt-repository ppa:webupd8team/sublime-text-<span class="number">2</span></span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">apt-get install sublime-text</span><br></pre></td></tr></table></figure>
<h2 id="安装控制器(仅适用于text2)：">安装控制器(仅适用于text2)：</h2><p> ctrl+`,调出控制台：</p>
<p> 输入：<br> <figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib2,os;pf=<span class="string">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();os.makedirs(ipp) <span class="keyword">if</span> <span class="keyword">not</span> os.path.<span class="keyword">exists</span>(ipp) <span class="keyword">else</span> None;<span class="keyword">open</span>(os.path.<span class="keyword">join</span>(ipp,pf),<span class="string">'wb'</span>).<span class="keyword">write</span>(urllib2.urlopen(<span class="string">'http://sublime.wbond.net/'</span>+pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).<span class="keyword">read</span>())</span><br></pre></td></tr></table></figure></p>
<h2 id="sublime_text3安装控制器">sublime text3安装控制器</h2>  <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  urllib.request,os;pf=<span class="string">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.<span class="keyword">join</span>(ipp,pf),<span class="string">'wb'</span>).<span class="keyword">write</span>(urllib.request.urlopen(<span class="string">'http://sublime.wbond.net/'</span>+pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).<span class="keyword">read</span>())</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>  Sublime Text 是一个代码编辑器（Sublime Text 2是收费软件，但可以无限期试用），也是HTML和散文先进的文本编辑器。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。</p>
<p>   SublimeText具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。<br>]]>
    
    </summary>
    
      <category term="sublime" scheme="http://magicer.xyz/tags/sublime/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu安装32位库]]></title>
    <link href="http://magicer.xyz/2015/04/30/ubuntu-32bit-lib/"/>
    <id>http://magicer.xyz/2015/04/30/ubuntu-32bit-lib/</id>
    <published>2015-04-30T03:35:35.000Z</published>
    <updated>2015-10-10T16:28:29.750Z</updated>
    <content type="html"><![CDATA[<p>很多软件只有32位的，有的依赖32位库还挺严重的；从ubuntu 13.10已经废弃了ia32-libs，但可以使用多架构，安装软件或包apt-get install program:i386。有的还是觉得烦，想一步到位安装所有的以前的ia32-libs，可以使用以下方法：<br><a id="more"></a></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo -<span class="tag">i</span></span><br><span class="line">cd /etc/apt/sources<span class="class">.list</span><span class="class">.d</span></span><br><span class="line">echo <span class="string">"deb http://archive.ubuntu.com/ubuntu/ raring main restricted universe multiverse"</span> &gt;ia32-libs-raring<span class="class">.list</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install ia32-libs</span><br></pre></td></tr></table></figure>
<p>复制代码<br>PS:这种方法肯定能安装上ia32-libs，但由于添加的是13.04的源，所以有没有混淆暂时不清楚，网上也有很多用新立德软件包管理器这样做；够狠，你就这么干。也可以这么安装了ia32-libs后，把/etc/apt/sources.list.d目录下的ia32-libs-raring.list删掉，然后再sudo apt-get update</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>很多软件只有32位的，有的依赖32位库还挺严重的；从ubuntu 13.10已经废弃了ia32-libs，但可以使用多架构，安装软件或包apt-get install program:i386。有的还是觉得烦，想一步到位安装所有的以前的ia32-libs，可以使用以下方法：<br>]]>
    
    </summary>
    
      <category term="linux" scheme="http://magicer.xyz/tags/linux/"/>
    
      <category term="ubuntu" scheme="http://magicer.xyz/tags/ubuntu/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[安装Hexo，搭建博客]]></title>
    <link href="http://magicer.xyz/2015/04/30/hexo-install/"/>
    <id>http://magicer.xyz/2015/04/30/hexo-install/</id>
    <published>2015-04-30T01:28:51.000Z</published>
    <updated>2015-10-10T15:54:46.170Z</updated>
    <content type="html"><![CDATA[<p>Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。</p>
<p>而架设Hexo的环境更简单了 不需要lnmp/lamp这些繁琐复杂的环境 仅仅需要一个简单的http服务器即可使用 或者使用互联网上免费的页面托管服务<br>比如Hexo的官方网站<a href="http://hexo.io" target="_blank" rel="external">http://hexo.io</a> 就是托管于github的pages服务上<br> 系统重装之后用hexo搭建的博客没有了，又花了整理了很长时间才搭建完成，在这里记录一下。<br><a id="more"></a></p>
<h2 id="安装nodejs">安装nodejs</h2><p>安装钱需要系统上有python g++ 和gcc<br><a href="nodejs.org/dist/v0.12.2/node-v0.12.2.tar.gz">下载nodejs</a><br>下载完了之后解压<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf node-v0.<span class="number">12.2</span>.tar.gz -C /<span class="keyword">opt</span></span><br><span class="line"><span class="keyword">cd</span> /<span class="keyword">opt</span>/node-v0.<span class="number">12.2</span></span><br><span class="line">./configure </span><br><span class="line"><span class="keyword">make</span> </span><br><span class="line">sudo <span class="keyword">make</span> install</span><br></pre></td></tr></table></figure></p>
<p>安装完成后检查<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -<span class="property">version</span></span><br></pre></td></tr></table></figure></p>
<h2 id="安装git">安装git</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install git-core</span><br></pre></td></tr></table></figure>
<h2 id="安装hexo">安装hexo</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo -g</span><br></pre></td></tr></table></figure>
<p>进入想要写文章的博客目录。<br>运行 hexo init<br>之后运行 npm install</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。</p>
<p>而架设Hexo的环境更简单了 不需要lnmp/lamp这些繁琐复杂的环境 仅仅需要一个简单的http服务器即可使用 或者使用互联网上免费的页面托管服务<br>比如Hexo的官方网站<a href="http://hexo.io">http://hexo.io</a> 就是托管于github的pages服务上<br> 系统重装之后用hexo搭建的博客没有了，又花了整理了很长时间才搭建完成，在这里记录一下。<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://magicer.xyz/tags/hexo/"/>
    
      <category term="博客搭建" scheme="http://magicer.xyz/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sublime输入中文]]></title>
    <link href="http://magicer.xyz/2015/04/29/sublime-chinese/"/>
    <id>http://magicer.xyz/2015/04/29/sublime-chinese/</id>
    <published>2015-04-29T14:09:30.000Z</published>
    <updated>2015-10-10T15:52:25.630Z</updated>
    <content type="html"><![CDATA[<p>在Ubuntu 14.04中安装了SublimeText 3之后发现既然不支持输入中文，于是在网上搜罗一下，发现很多人遇到了同样的问题，但是解决办法大该就只有一个。下面根据自身的安装及解决办法总结如下：</p>
<a id="more"></a>
<h2 id="1-_SublimeText_3的安装">1. SublimeText 3的安装</h2><p>安装方式有多种，本文所描述的是从官方网站上下载64位的.deb文件 ，具体为<a href="http://c758482.r82.cf2.rackcdn.com/sublime-text_build-3059_amd64.deb文件，下载后双击即会自动使用默认的安装软件安装。" target="_blank" rel="external">http://c758482.r82.cf2.rackcdn.com/sublime-text_build-3059_amd64.deb文件，下载后双击即会自动使用默认的安装软件安装。</a></p>
<h2 id="2-_相关依赖软件的安装">2. 相关依赖软件的安装</h2> <figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install build-essential libgtk2.0-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure>
<h2 id="3-_拷贝如下代码到文件sublime-imfix-c文件中，该文件需要自己创建，随便放到那里都行。">3. 拷贝如下代码到文件sublime-imfix.c文件中，该文件需要自己创建，随便放到那里都行。</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line"> * sublime-imfix.c</span><br><span class="line"> * Use LD_PRELOAD to interpose some function to fix sublime input method support for linux.</span><br><span class="line"> * By Cjacker Huang &lt;jianzhong.huang at i-soft.com.cn&gt; *</span><br><span class="line"> *</span><br><span class="line"> * gcc -shared -o libsublime-imfix.so sublime_imfix.c  `pkg-config --libs --cflags gtk+-2.0` -fPIC</span><br><span class="line"> * LD_PRELOAD=./libsublime-imfix.so sublime_text</span><br><span class="line"> */</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;gtk/gtk.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;gdk/gdkx.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> GdkSegment GdkRegionBox;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> _GdkRegion</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">long</span> size;</span><br><span class="line">    <span class="keyword">long</span> numRects;</span><br><span class="line">    GdkRegionBox *rects;</span><br><span class="line">    GdkRegionBox extents;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">GtkIMContext *local_context;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span></span><br><span class="line"><span class="title">gdk_region_get_clipbox</span> <span class="params">(<span class="keyword">const</span> GdkRegion *region,</span><br><span class="line">                        GdkRectangle    *rectangle)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    g_return_if_fail (region != NULL);</span><br><span class="line">    g_return_if_fail (rectangle != NULL);</span><br><span class="line"></span><br><span class="line">    rectangle-&gt;x = region-&gt;extents.x1;</span><br><span class="line">    rectangle-&gt;y = region-&gt;extents.y1;</span><br><span class="line">    rectangle-&gt;width = region-&gt;extents.x2 - region-&gt;extents.x1;</span><br><span class="line">    rectangle-&gt;height = region-&gt;extents.y2 - region-&gt;extents.y1;</span><br><span class="line">    GdkRectangle rect;</span><br><span class="line">    rect.x = rectangle-&gt;x;</span><br><span class="line">    rect.y = rectangle-&gt;y;</span><br><span class="line">    rect.width = <span class="number">0</span>;</span><br><span class="line">    rect.height = rectangle-&gt;height;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//The caret width is 2;</span></span><br><span class="line">    <span class="comment">//Maybe sometimes we will make a mistake, but for most of the time, it should be the caret.</span></span><br><span class="line">    <span class="keyword">if</span> (rectangle-&gt;width == <span class="number">2</span> &amp;&amp; GTK_IS_IM_CONTEXT(local_context)) &#123;</span><br><span class="line">        gtk_im_context_set_cursor_location(local_context, rectangle);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//this is needed, for example, if you input something in file dialog and return back the edit area</span></span><br><span class="line"><span class="comment">//context will lost, so here we set it again.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> GdkFilterReturn <span class="title">event_filter</span> <span class="params">(GdkXEvent *xevent, GdkEvent *event, gpointer im_context)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    XEvent *xev = (XEvent *)xevent;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (xev-&gt;type == KeyRelease &amp;&amp; GTK_IS_IM_CONTEXT(im_context)) &#123;</span><br><span class="line">        GdkWindow *win = g_object_get_data(G_OBJECT(im_context), <span class="string">"window"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (GDK_IS_WINDOW(win)) &#123;</span><br><span class="line">            gtk_im_context_set_client_window(im_context, win);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> GDK_FILTER_CONTINUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_im_context_set_client_window</span> <span class="params">(GtkIMContext *context,</span><br><span class="line">                                       GdkWindow    *window)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    GtkIMContextClass *klass;</span><br><span class="line">    g_return_if_fail (GTK_IS_IM_CONTEXT (context));</span><br><span class="line">    klass = GTK_IM_CONTEXT_GET_CLASS (context);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (klass-&gt;set_client_window) &#123;</span><br><span class="line">        klass-&gt;set_client_window (context, window);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!GDK_IS_WINDOW (window)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    g_object_set_data(G_OBJECT(context), <span class="string">"window"</span>, window);</span><br><span class="line">    <span class="keyword">int</span> width = gdk_window_get_width(window);</span><br><span class="line">    <span class="keyword">int</span> height = gdk_window_get_height(window);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (width != <span class="number">0</span> &amp;&amp; height != <span class="number">0</span>) &#123;</span><br><span class="line">        gtk_im_context_focus_in(context);</span><br><span class="line">        local_context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    gdk_window_add_filter (window, event_filter, context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>按照文件头上注释所说的编译该文件，在终端里进入到存放该文件的目录中，输入如下命令：<br>    <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -shared -o libsublime-imfix<span class="class">.so</span> sublime_imfix<span class="class">.c</span>  `pkg-config --libs --cflags gtk+-<span class="number">2.0</span>` -fPIC</span><br></pre></td></tr></table></figure></p>
<p>最后在当前目录下得到libsublime-imfix.so这个共享库。</p>
<h2 id="4-_中文输入">4. 中文输入</h2><p>到这里默认已经装好了中文输入法（搜狗输入法linux版）。得到第3步中的库libsublime-imfix.so之后，先试试看是否能正常使用中文输入法，在终端中输入如下命令：</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">LD_PRELOAD=</span>./libsublime-imfix.so subl             <span class="comment">#subl是安装好SublimeText 3后的程序启动命令</span></span><br></pre></td></tr></table></figure>
<p>如果一切正常，在启动之后，搜狗输入法就能可以输入了。</p>
<h2 id="5-_为了方便">5. 为了方便</h2><p>在第4步中如果每次都输入LD_PRELOAD这样显得太不方便了，在这里提供简单修改图标连接的方式，快速打开SublimeText。将libsublime-imfix.so拷贝到系统库的默认路径中：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp libsublime-imfix<span class="class">.so</span> /usr/lib/</span><br></pre></td></tr></table></figure>
<p>修改/usr/share/applications/sublime_text.desktop文件</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim <span class="regexp">/usr/</span>share<span class="regexp">/applications/</span>sublime_text.desktop</span><br></pre></td></tr></table></figure>
<p>打开后将Exec=/opt/sublime_text/sublime_text %F修改为<br><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Exec</span>=<span class="function_or_atom">bash</span> -<span class="function_or_atom">c</span> <span class="string">'LD_PRELOAD=/usr/lib/libsublime-imfix.so /opt/sublime_text/sublime_text'</span> <span class="comment">%F</span></span><br></pre></td></tr></table></figure></p>
<p>将Exec=/opt/sublime_text/sublime_text -n修改为</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Exec=</span>bash -c '<span class="variable">LD_PRELOAD=</span>/usr/lib/libsublime-imfix.so /opt/sublime_text/sublime_text' -n</span><br></pre></td></tr></table></figure>
<p>这样就通过快捷方式打开SublimeText 3就可以支持中文输入了。</p>
<p>注：第五步仅限使用.deb文件安装的情况，如果使用源码安装的则需要变通一下，写个脚本将LD_PRELOAD加上即可</p>
<pre><code>本文转载自 <span class="symbol">http:</span>/<span class="regexp">/blog.csdn.net/cywosp</span><span class="regexp">/article/details</span><span class="regexp">/32350899</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>在Ubuntu 14.04中安装了SublimeText 3之后发现既然不支持输入中文，于是在网上搜罗一下，发现很多人遇到了同样的问题，但是解决办法大该就只有一个。下面根据自身的安装及解决办法总结如下：</p>]]>
    
    </summary>
    
      <category term="sublime" scheme="http://magicer.xyz/tags/sublime/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android初学常见的几个知识点]]></title>
    <link href="http://magicer.xyz/2015/04/16/android-basic/"/>
    <id>http://magicer.xyz/2015/04/16/android-basic/</id>
    <published>2015-04-15T16:09:30.000Z</published>
    <updated>2015-10-10T16:11:09.354Z</updated>
    <content type="html"><![CDATA[<h2 id="Activity">Activity</h2><p>Activity 是用户接口程序，原则上它会提供给用户一个交互式的接口功能。它是 android 应用程序的基本功能单元。Activity 本身是没有界面的。所以activity类创建了一个窗口，开发人员可以通过setContentView(View)接口把UI放到activity创建的窗口上，当activity指向全屏窗口时，也可以用其他方式实现：作为漂浮窗口（通过windowIsFloating的主题集合），或者嵌入到其他的activity（使用ActivityGroup）。activity是单独的，用于处理用户操作。几乎所有的activity都要和用户打交道<a id="more"></a></p>
<h3 id="(一)Activity的生命周期">(一)Activity的生命周期</h3><p><img src="/image/Android/activity_lifecycle.png"></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.activity1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"> <span class="keyword">private</span> String TAG=<span class="string">"TAG"</span>;</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.activity_main);</span><br><span class="line">		Log.d(TAG,<span class="string">"onCreate"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">super</span>.onStart();</span><br><span class="line">		Log.d(TAG,<span class="string">"onStart"</span>);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">super</span>.onResume();</span><br><span class="line">		Log.d(TAG,<span class="string">"onResume"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">super</span>.onPause();</span><br><span class="line">		Log.d(TAG,<span class="string">"onPause"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestart</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">super</span>.onRestart();</span><br><span class="line">			Log.d(TAG,<span class="string">"onRestart"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">super</span>.onStop();</span><br><span class="line">		Log.d(TAG,<span class="string">"onStop"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">super</span>.onDestroy();</span><br><span class="line">		Log.d(TAG,<span class="string">"onDestroy"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序启动时经历：onCreate—&gt;onStart—&gt;onResume<br>按下返回键时：onPause—&gt;onStop—&gt;onDestroy<br>按下home键时：onPause—&gt;onStop<br>再次调用时：onRestart—&gt;onStart—&gt;onResume</p>
<h3 id="打开另一个activity">打开另一个activity</h3><p>在onCreate()方法中添加以下代码来设置按钮button1的监听事件。<br>前提是：布局文件中已经添加了id为button1的按钮。</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Button btn =(Button) findViewById(R.id.button1);</span><br><span class="line">	btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line">		<span class="annotation">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">			Intent itn =<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,activity2.class);</span><br><span class="line">			<span class="comment">//此处的activity2为第二个类的名，MainActivity为当前类的名字。</span></span><br><span class="line">			startActivity(itn);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br></pre></td></tr></table></figure>
<p> 在另外创建一个类继承自activity 和一个布局文件。<br> 运行为android application.点击按钮即可进入另一个activity 。<br> 可以在第二个activity中设置监听事件来关闭新打开的activity。（在第二个类文件的onCreate()方法中添加）代码如下：</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Button btn2=(Button) findViewById(R.id.btn2);</span><br><span class="line">	btn2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line">		<span class="annotation">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">			finish();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="Notification">Notification</h2><p>应用实例代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NOTIFICATION_ID=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">private</span> Button btn;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">	setContentView(R.layout.activity_main);</span><br><span class="line">     	btn=(Button) findViewById(R.id.btn_notification);</span><br><span class="line">	btn.setOnClickListener(<span class="keyword">new</span> View. OnClickListener() &#123;</span><br><span class="line">	</span><br><span class="line">		<span class="annotation">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">			android.support.v4.app.NotificationCompat.Builder builder=<span class="keyword">new</span> NotificationCompat.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">			builder.setSmallIcon(R.drawable.ic_launcher);</span><br><span class="line">			builder.setContentTitle(<span class="string">"通知"</span>);</span><br><span class="line">			builder.setContentText(<span class="string">"这是通知消息"</span>);</span><br><span class="line">			Notification notification=builder.build();</span><br><span class="line">			NotificationManager manager=(NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);</span><br><span class="line">			manager.notify(NOTIFICATION_ID,notification);</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="ListView的使用及ArrayAdapter">ListView的使用及ArrayAdapter</h2><p>应用实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> ListView listview;</span><br><span class="line"><span class="keyword">private</span> ArrayAdapter&lt;String&gt; arr_adapter;</span><br><span class="line"><span class="keyword">private</span> SimpleAdapter simple_adapter;</span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">	setContentView(R.layout.activity_main);</span><br><span class="line">	 listview=(ListView) findViewById(R.id.listView1);</span><br><span class="line">	 String []arr_data=&#123;<span class="string">"姓名"</span>,<span class="string">"性别"</span>,<span class="string">"年龄"</span>&#125;;</span><br><span class="line">	 <span class="comment">//1,新建一个适配器</span></span><br><span class="line">	 <span class="comment">//2,配置数据项</span></span><br><span class="line">	 <span class="comment">//ArrayAdapter(上下文，当前listview加载的每一个列表项所对应的布局文件,数据源)</span></span><br><span class="line">	 arr_adapter=<span class="keyword">new</span> ArrayAdapter&lt;String&gt;(<span class="keyword">this</span>,</span><br><span class="line">	 					android.R.layout.simple_list_item_1,</span><br><span class="line">	 					arr_data);</span><br><span class="line">	 <span class="comment">//3,视图（ListView）加载适配器</span></span><br><span class="line">	 listview.setAdapter(arr_adapter);	 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Toast的使用">Toast的使用</h2><h3 id="（一）最简单的使用案例">（一）最简单的使用案例</h3>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Toast.makeText( getBaseContext(),</span><br><span class="line">		    <span class="string">"需要显示的文字"</span>，</span><br><span class="line">		    LENGTH_SHORT).show();</span><br></pre></td></tr></table></figure>
<p>  地一个参数是上下文，第二个参数是需要显示的文字提示，第三个参数是显示的时间，最后调用show()方法显示出来。</p>
<h3 id="（二）构建自己的toast样式">（二）构建自己的toast样式</h3><p>  参见官方手册<br>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">              <span class="attribute">android:id</span>=<span class="value">"@+id/toast_layout_root"</span></span><br><span class="line">              <span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span></span><br><span class="line">              <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">              <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">              <span class="attribute">android:padding</span>=<span class="value">"8dp"</span></span><br><span class="line">              <span class="attribute">android:background</span>=<span class="value">"#DAAA"</span></span><br><span class="line">              &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span> <span class="attribute">android:src</span>=<span class="value">"@drawable/droid"</span></span><br><span class="line">               <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">               <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">               <span class="attribute">android:layout_marginRight</span>=<span class="value">"8dp"</span></span><br><span class="line">               /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">android:id</span>=<span class="value">"@+id/text"</span></span><br><span class="line">              <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">              <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">              <span class="attribute">android:textColor</span>=<span class="value">"#FFF"</span></span><br><span class="line">              /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  LayoutInflater inflater = getLayoutInflater();</span><br><span class="line">View layout = inflater.inflate(R.layout.custom_toast,</span><br><span class="line">                               (ViewGroup) findViewById(R.id.toast_layout_root));</span><br><span class="line"></span><br><span class="line">TextView text = (TextView) layout.findViewById(R.id.text);</span><br><span class="line">text.setText(<span class="string">"This is a custom toast"</span>);</span><br><span class="line"></span><br><span class="line">Toast toast = <span class="keyword">new</span> Toast(getApplicationContext());</span><br><span class="line">toast.setGravity(Gravity.CENTER_VERTICAL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">toast.setDuration(Toast.LENGTH_LONG);</span><br><span class="line">toast.setView(layout);</span><br><span class="line">toast.show();</span><br></pre></td></tr></table></figure>
<h3 id="（三）toast的样式">（三）toast的样式</h3><p>  <img src=" /image/Android/toast.png" alt="toast" class="image_center"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Activity">Activity</h2><p>Activity 是用户接口程序，原则上它会提供给用户一个交互式的接口功能。它是 android 应用程序的基本功能单元。Activity 本身是没有界面的。所以activity类创建了一个窗口，开发人员可以通过setContentView(View)接口把UI放到activity创建的窗口上，当activity指向全屏窗口时，也可以用其他方式实现：作为漂浮窗口（通过windowIsFloating的主题集合），或者嵌入到其他的activity（使用ActivityGroup）。activity是单独的，用于处理用户操作。几乎所有的activity都要和用户打交道]]>
    
    </summary>
    
      <category term="android" scheme="http://magicer.xyz/tags/android/"/>
    
      <category term="Android" scheme="http://magicer.xyz/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android开发环境搭建]]></title>
    <link href="http://magicer.xyz/2015/03/19/android-first-step/"/>
    <id>http://magicer.xyz/2015/03/19/android-first-step/</id>
    <published>2015-03-19T12:08:15.000Z</published>
    <updated>2015-10-10T16:05:20.338Z</updated>
    <content type="html"><![CDATA[<p>这学期有安卓课程，在搭建android环境的时候还是遇到了一些问题，所以决定整理一份关于<br> android环境搭建的教程留着以后使用。主要包括jdk的安装，android studio和eclipse的配置，和sdk的安装<br>  主要是sdk的问题较为重要，毕竟在国内无法访问<a id="more"></a></p>
<h2 id="（一）JDK的配置">（一）JDK的配置</h2><h3 id="ubtuntu环境下配置jdk">ubtuntu环境下配置jdk</h3><p>  在官网下载jdk，地址为：<br><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">JAVA下载链接</a><br>这里我们选择Java SE 8u40 Linux64位：jdk-8u40-linux-x64.tar.gz。<br>进入下载地址，下载之前需要接受许可协议。<br>下载之后，进入下载目录将JDK包放到/opt/Java目录下：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /opt/Java</span><br><span class="line">sudo mv jdk-<span class="number">8</span>u40-linux-x64<span class="class">.tar</span><span class="class">.gz</span>  /opt/Java</span><br><span class="line">cd /opt/Java</span><br><span class="line">sudo tar -zxvf jdk-<span class="number">8</span>u40-linux-x64<span class="class">.tar</span><span class="class">.gz</span>。</span><br></pre></td></tr></table></figure>
<p>然后是配置JAVA的环境变量，linux中配置环境变量有4个地方：</p>
<p>/etc/environment：设置整个系统的环境，与登录用户无关</p>
<p>/etc/profile：为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行并从/etc/profile.d目录的配置文件中搜集shell的设置</p>
<p>/etc/bash.bashrc：为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.</p>
<p>~/.bashrc：该文件包含专用于该登录用户bash shell的bash信息,当登录时以及每次打开新的shell时该该文件被读取。它可以把使用这些环境变量的权限控制到用户级别，如果你需要给某个用户权限使用这些环境变量，你只需要修改其个人用户主目录下的.bashrc文件就可以了。</p>
<p><em>各配置的生效时间：</em></p>
<p>/etc/environment：重启生效<br>/etc/profile：注销后登录生效<br>/etc/bash.bashrc：重新打开bash shell后生效<br>~/.bahsrc：重新打开bash shell后生效</p>
<p>一般我们修改/etc/profile 即可：<br>sudo gedit /etc/profile</p>
<p>在文件最后加上一下四行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/Java/jdk1.<span class="number">7.0</span>_55</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p>
<p>保存后注销重新登陆即可生效（source /etc/profile 命令只是使得环境变量对当前的shell有效）。<br><code>在终端运行一下命令看是否安装完成</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p>
<h3 id="windows">windows</h3><h2 id="（二）android_studio和eclipse的配置">（二）android studio和eclipse的配置</h2><p><a href="http://www.eclipse.org/downloads/" target="_blank" rel="external">Eclipse下载地址</a><br><a href="https://developer.android.com/sdk/installing/studio.html#download" target="_blank" rel="external">android studio官方下载地址</a></p>
<p>推荐一个很好的网站上面有各种android开发需要的软件(<code>android studio也可以从这里下载，毕竟官网进不去</code>)<br><a href="http://www.androiddevtools.cn/" target="_blank" rel="external">http://www.androiddevtools.cn/</a></p>
<p>  在windows上eclipse直接解压就好。</p>
<h3 id="eclipse配置ADT">eclipse配置ADT</h3><p>  （1）打开eclipse找到  Help=&gt;install new software 在打开的界面中找到Add然后点击<br>  打开后name随便输 location输入<a href="https://dl-ssl.google.com/android/eclipse/" target="_blank" rel="external">https://dl-ssl.google.com/android/eclipse/</a> 然后点击确定  如果<a href="https://dl-ssl.google.com/android/eclipse/" target="_blank" rel="external">https://dl-ssl.google.com/android/eclipse/</a>  慢的话可以换成 <a href="http://dl-ssl.google.com/android/eclipse/" target="_blank" rel="external">http://dl-ssl.google.com/android/eclipse/</a> 然后点确定<br>（2）也可以离线安装 就是在上面推荐的网站上下载好ADT然后在打开的Add界面中点击Archive 找到下载的安装包，name随便填写一个即可。（安装的时候断开网，ADT可能会自动联网更新）<br>安装完成后eclipse界面上会出现两个标志。在windows选项中找到preferences配置SDK路径</p>
<p><img src="/image_code/eclipse-sdk.png" alt="sdk配置" class="img-shadow"></p>
<h2 id="（三）SDK的安装配置">（三）SDK的安装配置</h2><p> 下载sdk并安装，后启动会自动更新。但观望无法访问，也可以看（四）解决此问题，当然也有替代方法：<br> 找到Tools==&gt;options配置<br> 打上勾之后，点击安装<br>例如：<br><img src="/image_code/sdkmanager2.png" alt"sdk配置"="" class="img-shadow"><br><img src="/image_code/sdkmanager.png" class="img-shadow"></p>
<h2 id="（四）SDK的问题与解决方案">（四）SDK的问题与解决方案</h2><p>  当进入sdk manager中时可能显示</p>
<blockquote>
<p>Failed to fetch URL <a href="https://dl-ssl.google.com/android/repository/repository.xml" target="_blank" rel="external">https://dl-ssl.google.com/android/repository/repository.xml</a>, reason: java.security.cert.CertificateException: No name matching dl-ssl.google.com found</p>
</blockquote>
<p>解决方法是在hosts文件下添加<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">203.208</span>.<span class="number">46.100</span> <span class="tag">dl</span><span class="class">.google</span><span class="class">.com</span></span><br><span class="line"><span class="number">203.208</span>.<span class="number">46.100</span> dl-ssl<span class="class">.google</span><span class="class">.com</span></span><br><span class="line">或</span><br><span class="line"><span class="number">64.233</span>.<span class="number">167.104</span> <span class="tag">dl</span><span class="class">.google</span><span class="class">.com</span></span><br><span class="line"><span class="number">64.233</span>.<span class="number">167.104</span> dl-ssl<span class="class">.google</span><span class="class">.com</span></span><br></pre></td></tr></table></figure></p>
<p>ubuntu下的话打开终端运行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim  /etc/hosts</span><br></pre></td></tr></table></figure>
<p>若是windows环境的话hosts文件在（修改的时候可能需要管理员权限）<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="command">\Windows</span><span class="command">\System</span>32<span class="command">\drivers</span><span class="command">\etc</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这学期有安卓课程，在搭建android环境的时候还是遇到了一些问题，所以决定整理一份关于<br> android环境搭建的教程留着以后使用。主要包括jdk的安装，android studio和eclipse的配置，和sdk的安装<br>  主要是sdk的问题较为重要，毕竟在国内无法访问]]>
    
    </summary>
    
      <category term="android" scheme="http://magicer.xyz/tags/android/"/>
    
      <category term="java" scheme="http://magicer.xyz/tags/java/"/>
    
      <category term="Android" scheme="http://magicer.xyz/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[搭建wordpress后出现的问题]]></title>
    <link href="http://magicer.xyz/2015/03/12/wordpress-problems/"/>
    <id>http://magicer.xyz/2015/03/12/wordpress-problems/</id>
    <published>2015-03-12T07:42:51.000Z</published>
    <updated>2015-10-10T16:02:12.674Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<h4 id="（一）出现_上传的文件尺寸超过php-ini中定义的upload_max_filesize值-的问题">（一）出现 上传的文件尺寸超过php.ini中定义的upload_max_filesize值.的问题</h4><p>找到php.ini文件 (一般在/etc/php /etc  /usr/local/etc下)打开后找到upload_max_filesize修改其默认值（2M）。<br>然后重启apache2（我用ubuntu14.04文件在/etc/php5/apache2下）。</p>
<h4 id="（二）无法建立目录wp-content/uploads/2015/03。有没有上级目录的写权限？">（二）无法建立目录wp-content/uploads/2015/03。有没有上级目录的写权限？</h4><p>使用PHPMyAdmin进入数据库。数据库管理的高级管理可以进去。<br>找到wordpress数据库，打开wp_options表<br>修改表中键名为upload_path的键值 这个值是一个路径（可能在表的第二页）<br>里面是空的，添加“wp-content/uploads”就解决了。＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝双引号必加！类似于注册表键值</p>
<h4 id="（三）解决”要执行请求的操作，WordPress需要访问您网页服务器的权限”">（三）解决”要执行请求的操作，WordPress需要访问您网页服务器的权限”</h4><p>在/var/www/wordpress文件夹下的wp-config.php添加如下代码 </p>
<pre><code><span class="class"><span class="keyword">define</span></span>(<span class="string">"FS_METHOD"</span>, <span class="string">"direct"</span>);
<span class="class"><span class="keyword">define</span></span>(<span class="string">"FS_CHMOD_DIR"</span>, <span class="number">0777</span>);
<span class="class"><span class="keyword">define</span></span>(<span class="string">"FS_CHMOD_FILE"</span>, <span class="number">0777</span>);
</code></pre><h4 id="（四）解决无法创建文件夹的问题">（四）解决无法创建文件夹的问题</h4><p>在/ver/www/wordpress下，把wp-content的文件权限改成777</p>
<pre><code><span class="title">sudo</span> chmod <span class="number">777</span> wp-content
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<h4 id="（一）出现_上传的文件尺寸超过php-ini中定义的upload_max_filesize值-的问题">（一）出现 上传的文件尺寸超过php.ini中定义的upload_max_filesize值.的问题</h4><p>找到ph]]>
    </summary>
    
      <category term="wordpress" scheme="http://magicer.xyz/tags/wordpress/"/>
    
      <category term="博客搭建" scheme="http://magicer.xyz/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[新学期]]></title>
    <link href="http://magicer.xyz/2015/03/12/wordpress-first/"/>
    <id>http://magicer.xyz/2015/03/12/wordpress-first/</id>
    <published>2015-03-12T06:11:57.000Z</published>
    <updated>2015-10-10T15:57:42.122Z</updated>
    <content type="html"><![CDATA[<h2 id="博客要转移了">博客要转移了</h2><p>  在ubuntu上搭建了一晚上的环境，到夜里两点，不过总算是弄好了，今天刚收到阿里云寄来的幕布，已经拍完照穿上去，刚接到短信已经通过了，就等着正式可用了。过几天是不是好要做个关于备案还有搭建wordpress环境的博客来记录一下。</p>
<p>   博客要转移了，申请了免费的万网主机，试一试做个真正的站长，看来需要学习的东西还是挺多的，就一个wordpress的环境就搭建了那么长时间。也是蛮拼的。<br>  <a id="more"></a></p>
<p>  <img src="/image/11855.jpg"></p>
<p>  申请万网主机之后很长时间一直没有使用，当时需要进行网站备案，按照程序走了一遍以为备案成功了。后来才发现根本就没有提交，最终还是在学校里进行了备案。备案过程还是听顺利的，尽管中间被迫重改了信息。但是到现在一切都还顺利。就等着备案成功转战wordpress了。</p>
<p>  开学已经一个多星期了都没有更新博客了。这学期的课程还算可以，android和linux还都不错。学习android。技多不压身。对android还是蛮喜欢的，不过就是课程短了点，美中不足啊。八周能学到什么啊，看来还是要全部靠自学了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="博客要转移了">博客要转移了</h2><p>  在ubuntu上搭建了一晚上的环境，到夜里两点，不过总算是弄好了，今天刚收到阿里云寄来的幕布，已经拍完照穿上去，刚接到短信已经通过了，就等着正式可用了。过几天是不是好要做个关于备案还有搭建wordpress环境的博客来记录一下。</p>
<p>   博客要转移了，申请了免费的万网主机，试一试做个真正的站长，看来需要学习的东西还是挺多的，就一个wordpress的环境就搭建了那么长时间。也是蛮拼的。<br>]]>
    
    </summary>
    
      <category term="生活轶事" scheme="http://magicer.xyz/categories/%E7%94%9F%E6%B4%BB%E8%BD%B6%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的代码之旅————纸上得来终觉浅]]></title>
    <link href="http://magicer.xyz/2015/02/04/my-code/"/>
    <id>http://magicer.xyz/2015/02/04/my-code/</id>
    <published>2015-02-04T09:25:18.000Z</published>
    <updated>2015-10-10T15:58:15.030Z</updated>
    <content type="html"><![CDATA[<p><img src="/image/11865.jpg" width="340px" height="360px" class="img-topic"><br>  看了很久的书，总感觉自己学会了，可是真正到让自己打出来代码的时候就发现，其实自己什么都不会。到处是错误。当然错误是在所难免的，但是只看书还是不够的，还是需要多实际操作。也许这就是为什么大学生出来之后还需要在参加培训才能直接工作的原因吧。实际动手能里确实有点太差了。引以为戒吧！  <a id="more"></a></p>
<p>  纸上得来终觉浅，觉知此事要躬行。</p>
<p>  当感觉自己无所不能的时候，也许此时你是一无是处。认真学习固然重要，但是脱离了实践终究是纸上谈兵。成不了什么大气候。<img src="/image/11865.jpg"></p>
]]></content>
    <summary type="html">
    <![CDATA[看了很久的书，总感觉自己学会了，可是真正到让自己打出来代码的时候就发现，其实自己什么都不会。到处是错误。当然错误是在所难免的，但是只看书还是不够的，还是需要多实际操作。也许这就是为什么大学生出来之后还需要在参加培训才能直接工作的原因吧。实际动手能里确实有点太差了。引以为戒吧！ <!--more-->]]>
    
    </summary>
    
      <category term="生活轶事" scheme="http://magicer.xyz/categories/%E7%94%9F%E6%B4%BB%E8%BD%B6%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用linux遇到的一些问题]]></title>
    <link href="http://magicer.xyz/2015/01/31/linux-problems/"/>
    <id>http://magicer.xyz/2015/01/31/linux-problems/</id>
    <published>2015-01-31T07:22:35.000Z</published>
    <updated>2015-10-10T15:59:25.734Z</updated>
    <content type="html"><![CDATA[<p>使用ubuntu linux 遇到的一些问题及解决方法。<a id="more"></a></p>
<h2 id="ubuntu的使用">ubuntu的使用</h2><p>1.安装完ubuntu之后，windows分区无法挂载，出现如下图所示提示：<br><img src="/image_code/01.png" alt="ubuntu挂载"><br>解决方法：打开终端（快捷键ctrl+alt+t）输入：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ntfsfix <span class="regexp">/dev/</span>sda6</span><br></pre></td></tr></table></figure></p>
<p>挂载系统盘时显示：</p>
<blockquote>
<p>Mounting volume… Windows is hibernated, refused to mount.<br>FAILED<br>Attempting to correct errors…<br>Processing $MFT and $MFTMirr…<br>Reading $MFT… OK<br>Reading $MFTMirr… OK<br>Comparing $MFTMirr to $MFT… OK<br>Processing of $MFT and $MFTMirr completed successfully.<br>Setting required flags on partition… OK<br>Going to empty the journal ($LogFile)… OK<br>Windows is hibernated, refused to mount.<br>Remount failed: Operation not permitted</p>
</blockquote>
<p>问题待解决。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>使用ubuntu linux 遇到的一些问题及解决方法。]]>
    
    </summary>
    
      <category term="ubuntu" scheme="http://magicer.xyz/tags/ubuntu/"/>
    
      <category term="系统使用" scheme="http://magicer.xyz/categories/%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[vim使用技巧及基本操作]]></title>
    <link href="http://magicer.xyz/2015/01/30/vim-note1/"/>
    <id>http://magicer.xyz/2015/01/30/vim-note1/</id>
    <published>2015-01-30T06:05:56.000Z</published>
    <updated>2015-10-10T16:02:10.374Z</updated>
    <content type="html"><![CDATA[<p>vim 的基本操作 <a id="more"></a></p>
<h2 id="基本操作">基本操作</h2><h3 id="复制粘贴">复制粘贴</h3><p><code>yw</code>复制光标所在单词<br><code>yy</code>复制当前行<br><code>nyy</code>复制n行<br><code>y$</code>复制光标所在位置到行末的字符<br><code>p</code>粘贴到光标后<br><code>P</code>粘贴到光标前<br><code>d$</code>删除光标至行尾的所有字符<br><code>dd</code>删除光标所在行<br><code>ndd</code>删除光标所在行在内的后n行。<br><code>dw</code>删除光标所在的单词<br><code>x</code>会删除光标下的字符。<br><code>xp</code>交换两个字符位置<br><code>ddp</code> 上下两行调换</p>
<h3 id="插入">插入</h3><p><code>a</code>从光标后插入。<br><code>i</code>从光标前插入。<br><code>A</code>从行末插入。<br><code>s</code>先删除光标下字符，然后进入插入模式。<br><code>o</code>在本行的下方增加一行，并进入插入模式。<br><code>O</code>在本行的上方增加一行，并进入插入模式。</p>
<h3 id="移动">移动</h3><p><code>hjkl</code>分别为左，下，上，右。<br><code>$</code>移动到行尾。<br><code>0</code>移动到行首。<br><code>（</code>移动到段落开头<br><code>）</code>移动到段落结尾<br><code>gg</code>跳到文件头。<br><code>G</code>移动到文件最后列<br><code>M</code>移动到视窗的中间列<br><code>{</code><br><code>}</code><br><code>w/W</code>光标移动到下一个字首<br><code>e/E</code>光标移动到下一个字末<br><code>b/B</code>光标移动到上一个字首</p>
<h3 id="保存退出">保存退出</h3><p><code>:q</code>不保存退出<br><code>:q!</code>不保存强制退出<br><code>:w</code>保存<br><code>:w filename</code>保存到文件filename中<br><code>:w! filename</code>强制保存到文件filename中<br><code>:wq</code>保存退出（或者是<code>：x</code> 或 <code>ZZ</code>）<br><code>:</code><br><code>:</code></p>
<h3 id="其他">其他</h3><p><code>r</code>替换光标下字符。（不进入插入模式）<br><code>.</code>重复上次操作。<br><code>u</code>撤销。<br><code>cl</code>修改当前字符<br><code>cc</code>修改当前行<br><code>c$</code>替换自光标到行尾的字符</p>
<h2 id="命令">命令</h2><p><code>&gt;G</code>命令会增加从当前行到文档末尾处的缩进。</p>
<h2 id="使用技巧（-的使用）">使用技巧（.的使用）</h2>]]></content>
    <summary type="html">
    <![CDATA[<p>vim 的基本操作]]>
    
    </summary>
    
      <category term="vim" scheme="http://magicer.xyz/tags/vim/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git及github的操作]]></title>
    <link href="http://magicer.xyz/2015/01/26/git-basic/"/>
    <id>http://magicer.xyz/2015/01/26/git-basic/</id>
    <published>2015-01-26T11:21:56.000Z</published>
    <updated>2015-10-10T16:18:14.902Z</updated>
    <content type="html"><![CDATA[<p>  Git是一个免费的、分布式的版本控制工具，或是一个强调速度快的源代码管理工具。Git诞生于2005年，最初是Linus Torvalds开发出来用于管理Linux内核的开发。<br>  <img src="https://github.com/Magicer/Image/blob/master/Hexo/github/github.jpg?raw=true" class="img-topic"><br>  <a id="more"></a></p>
<h2 id="git的基本命令">git的基本命令</h2><p>git clone：当你有远程git版本库，只需要在本地克隆一份：</p>
<pre><code><span class="comment"><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone: https:<span class="comment">//github.com/Magicer/project.git</span></span><br><span class="line">下载指定分支</span><br><span class="line">git clone -<span class="tag">b</span> &lt;branch&gt; &lt;remote_repo&gt; 例如： git clone -<span class="tag">b</span> 指定的分支名字</span><br></pre></td></tr></table></figure></span>
</code></pre><p>git init :也可以使用git init初始化一个本地仓库。运行了git init之后文件夹下的文件就会被进行版本控制</p>
<p>git add: 将当前更改或者是新增文件加入到git的索引中。</p>
<p>git status: </p>
<p>git commit (-m): 提交当前工作区的修改内容。</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">git</span> commit -m <span class="string">"提交信息"</span></span><br></pre></td></tr></table></figure>
<p>git rm：从当前工作空间中和索引中删除文件 如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm index.html</span><br></pre></td></tr></table></figure></p>
<h2 id="git的分支命令">git的分支命令</h2><p>git branch : 创建分支命令。（加上分支名，不加时显示所有分支）<br>  git branch -d :删除分支</p>
<p>git checkout :  切换分支命令。<br>  git checkout -b： 新建并切换到该分支。</p>
<p>git merge gh_pages：合并分支gh_pages到当前分支</p>
]]></content>
    <summary type="html">
    <![CDATA[Git是一个免费的、分布式的版本控制工具，或是一个强调速度快的源代码管理工具。Git诞生于2005年，最初是Linus Torvalds开发出来用于管理Linux内核的开发。]]>
    
    </summary>
    
      <category term="github" scheme="http://magicer.xyz/tags/github/"/>
    
      <category term="软件使用" scheme="http://magicer.xyz/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
</feed>